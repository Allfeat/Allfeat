apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "allfeat-node.fullname" . }}
  labels:
    {{- include "allfeat-node.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "allfeat-node.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "allfeat-node.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "allfeat-node.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: RUST_LOG
              value: {{ .Values.logging.level | default "info" | quote }}
            - name: RUST_BACKTRACE
              value: {{ .Values.logging.backtrace | default "0" | quote }}
          args:
            {{- if .Values.node.devMode }}
            - --dev
            {{- else }}
            - --base-path
            - {{ .Values.node.basePath }}
            - --chain
            - {{ .Values.node.chain }}
            - --name
            - {{ .Values.node.name }}
            - --port
            - {{ .Values.node.network.port | quote }}
            {{- end }}
            {{- if .Values.rpc.external }}
            - --rpc-external
            {{- end }}
            - --rpc-port
            - {{ .Values.rpc.port | quote }}
            - --rpc-cors
            - {{ .Values.rpc.cors }}
            - --rpc-methods
            - {{ .Values.rpc.methods }}
            {{- if .Values.metrics.enabled }}
            - --prometheus-external
            - --prometheus-port
            - {{ .Values.metrics.port | quote }}
            {{- end }}
            {{- if not .Values.node.devMode }}
            - --database
            - {{ .Values.database.type }}
            {{- if .Values.node.network.publicAddr }}
            - --public-addr
            - {{ .Values.node.network.publicAddr }}
            {{- end }}
            {{- if .Values.node.network.reservedNodes }}
            - --reserved-nodes
            - {{ .Values.node.network.reservedNodes }}
            {{- end }}
            {{- if .Values.node.network.bootnodes }}
            - --bootnodes
            - {{ .Values.node.network.bootnodes }}
            {{- end }}
            {{- end }}
            {{- range .Values.node.customArgs }}
            - {{ . }}
            {{- end }}
          ports:
            - name: p2p
              containerPort: {{ .Values.node.network.port }}
              protocol: TCP
            - name: rpc
              containerPort: {{ .Values.rpc.port }}
              protocol: TCP
            {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
            {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- if .Values.livenessProbe.httpGet }}
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.livenessProbe.httpGet.port }}
              {{- if .Values.livenessProbe.httpGet.httpHeaders }}
              httpHeaders:
              {{- range .Values.livenessProbe.httpGet.httpHeaders }}
              - name: {{ .name }}
                value: {{ .value }}
              {{- end }}
              {{- end }}
            {{- else if .Values.livenessProbe.exec }}
            exec:
              command:
              {{- range .Values.livenessProbe.exec.command }}
              - {{ . | quote }}
              {{- end }}
            {{- else }}
            tcpSocket:
              port: {{ .Values.livenessProbe.tcpSocket.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- if .Values.readinessProbe.httpGet }}
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.readinessProbe.httpGet.port }}
              {{- if .Values.readinessProbe.httpGet.httpHeaders }}
              httpHeaders:
              {{- range .Values.readinessProbe.httpGet.httpHeaders }}
              - name: {{ .name }}
                value: {{ .value }}
              {{- end }}
              {{- end }}
            {{- else if .Values.readinessProbe.exec }}
            exec:
              command:
              {{- range .Values.readinessProbe.exec.command }}
              - {{ . | quote }}
              {{- end }}
            {{- else }}
            tcpSocket:
              port: {{ .Values.readinessProbe.tcpSocket.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            {{- if .Values.startupProbe.httpGet }}
            httpGet:
              path: {{ .Values.startupProbe.httpGet.path }}
              port: {{ .Values.startupProbe.httpGet.port }}
              {{- if .Values.startupProbe.httpGet.httpHeaders }}
              httpHeaders:
              {{- range .Values.startupProbe.httpGet.httpHeaders }}
              - name: {{ .name }}
                value: {{ .value }}
              {{- end }}
              {{- end }}
            {{- else if .Values.startupProbe.exec }}
            exec:
              command:
              {{- range .Values.startupProbe.exec.command }}
              - {{ . | quote }}
              {{- end }}
            {{- else }}
            tcpSocket:
              port: {{ .Values.startupProbe.tcpSocket.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.node.basePath }}
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "allfeat-node.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
