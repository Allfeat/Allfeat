1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "allfeat-node.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "allfeat-node.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "allfeat-node.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.rpcPort }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "allfeat-node.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Check the status of your Allfeat node:
   kubectl logs -f deployment/{{ include "allfeat-node.fullname" . }} -n {{ .Release.Namespace }}

3. Monitor the node:
{{- if .Values.metrics.enabled }}
   # Prometheus metrics available at:
   kubectl port-forward svc/{{ include "allfeat-node.fullname" . }} {{ .Values.metrics.port }}:{{ .Values.metrics.port }} -n {{ .Release.Namespace }}
   # Then visit http://localhost:{{ .Values.metrics.port }}/metrics
{{- end }}

4. Access RPC endpoint:
   kubectl port-forward svc/{{ include "allfeat-node.fullname" . }} {{ .Values.rpc.port }}:{{ .Values.rpc.port }} -n {{ .Release.Namespace }}
   # RPC available at http://localhost:{{ .Values.rpc.port }}

{{- if .Values.node.devMode }}
⚠️  WARNING: Node is running in DEVELOPMENT mode!
   This mode is not secure and should only be used for development purposes.
   Set node.devMode to false for production deployments.
{{- end }}

{{- if not .Values.persistence.enabled }}
⚠️  WARNING: Persistence is disabled!
   Your blockchain data will be lost when the pod restarts.
   Enable persistence for production use.
{{- end }}

Configuration Summary:
- Node Mode: {{ if .Values.node.devMode }}Development{{ else }}Production{{ end }}
- Chain: {{ .Values.node.chain }}
- Database: {{ .Values.database.type }}
- Persistence: {{ if .Values.persistence.enabled }}Enabled ({{ .Values.persistence.size }}){{ else }}Disabled{{ end }}
- P2P Port: {{ .Values.node.network.port }}
- RPC Port: {{ .Values.rpc.port }}
{{- if .Values.metrics.enabled }}
- Metrics Port: {{ .Values.metrics.port }}
{{- end }}
