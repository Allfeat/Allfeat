[workspace]
resolver = "2"
members = [
	"node",
	"runtime/*",
	"primitives",
	"pallets/*",
	"midds/stakeholder",
	"midds/musical-work",
	"support",
	"support/genres-registry",
]

[workspace.package]
authors = ["Allfeat labs. <hello@allfeat.com>"]
edition = "2021"
homepage = "https://allfeat.com"
license = "GPL-3.0"
repository = "https://github.com/allfeat/allfeat"
version = "1.0.0-dev"

# The list of dependencies below (which can be both direct and indirect dependencies) are crates
# that are suspected to be CPU-intensive, and that are unlikely to require debugging (as some of
# their debug info might be missing) or to require to be frequently recompiled. We compile these
# dependencies with `opt-level=3` even in "dev" mode in order to make "dev" mode more usable.
# The majority of these crates are cryptographic libraries.
#
# Note that this does **not** affect crates that depend on Substrate. In other words, if you add
# a dependency on Substrate, you have to copy-paste this list in your own `Cargo.toml` (assuming
# that you want the same list). This list is only relevant when running `cargo build` from within
# the Substrate workspace.
#
# If you see an error mentioning "profile package spec ... did not match any packages", it
# probably concerns this list.
#
# This list is ordered alphabetically.
[profile.dev.package]
blake2 = { opt-level = 3 }
blake2b_simd = { opt-level = 3 }
cranelift-codegen = { opt-level = 3 }
cranelift-wasm = { opt-level = 3 }
crc32fast = { opt-level = 3 }
crossbeam-deque = { opt-level = 3 }
crypto-mac = { opt-level = 3 }
curve25519-dalek = { opt-level = 3 }
ed25519-zebra = { opt-level = 3 }
futures-channel = { opt-level = 3 }
hash-db = { opt-level = 3 }
hashbrown = { opt-level = 3 }
hmac = { opt-level = 3 }
httparse = { opt-level = 3 }
integer-sqrt = { opt-level = 3 }
keccak = { opt-level = 3 }
librocksdb-sys = { opt-level = 3 }
libsecp256k1 = { opt-level = 3 }
libz-sys = { opt-level = 3 }
mio = { opt-level = 3 }
nalgebra = { opt-level = 3 }
num-bigint = { opt-level = 3 }
parking_lot = { opt-level = 3 }
parking_lot_core = { opt-level = 3 }
percent-encoding = { opt-level = 3 }
primitive-types = { opt-level = 3 }
sha2 = { opt-level = 3 }
sha3 = { opt-level = 3 }
smallvec = { opt-level = 3 }
twox-hash = { opt-level = 3 }
uint = { opt-level = 3 }
x25519-dalek = { opt-level = 3 }
zeroize = { opt-level = 3 }

[workspace.dependencies]
# Dependencies are split into 2 groups: wasm and client.
# - "wasm" dependencies requires to be no_std compatible, which often requires
#   `default-features = false`. When used in a client-side crate the "std" feature should be enabled
#   there if it exists.
# - "client" dependencies are only used in the client, and thus don't need to be no_std compatible.

# Allfeat (wasm)
allfeat-support = { version = "1.0.0-dev", default-features = false, path = "./support" }
allfeat-primitives = { version = "1.0.0", default-features = false, path = "./primitives" }
pallet-midds = { version = "1.0.0-dev", default-features = false, path = "./pallets/midds" }
genres-registry = { package = "genres-registry", version = "1.0.0-dev", default-features = false, path = "./support/genres-registry" }
# midds-artist = { version = "1.0.0-dev", default-features = false, path = "./midds/artist" }
midds-stakeholder = { version = "1.0.0-dev", default-features = false, path = "./midds/stakeholder" }
midds-musical-work = { version = "1.0.0-dev", default-features = false, path = "./midds/musical-work" }
pallet-validator-set = { package = "substrate-validator-set", version = "1.1.0", default-features = false, git = "https://github.com/Allfeat/substrate-validator-set.git", branch = "master" }

# polkadot-sdk
sp-core = { version = "35.0.0", default-features = false }
sp-application-crypto = { version = "39.0.0", default-features = false }
sp-tracing = { version = "17.0.1", default-features = false }
sp-io = { version = "39.0.0", default-features = false }
sp-version = { version = "38.0.0", default-features = false }
sp-consensus = { version = "0.41.0", default-features = false }
sp-consensus-babe = { version = "0.41.0", default-features = false }
sp-consensus-grandpa = { version = "22.0.0", default-features = false }
sp-authority-discovery = { version = "35.0.0", default-features = false }
sp-genesis-builder = { version = "0.16.0", default-features = false }
sp-keyring = { version = "40.0.0", default-features = false }
sp-api = { version = "35.0.0", default-features = false }
sp-inherents = { version = "35.0.0", default-features = false }
sp-offchain = { version = "35.0.0", default-features = false }
sp-session = { version = "37.0.0", default-features = false }
sp-transaction-pool = { version = "35.0.0", default-features = false }
sp-block-builder = { version = "35.0.0", default-features = false }
sp-blockchain = { version = "38.0.0", default-features = false }
sp-timestamp = { version = "35.0.0", default-features = false }
sp-runtime = { version = "40.0.0", default-features = false }
sp-keystore = { version = "0.41.0", default-features = false }
sp-transaction-storage-proof = { version = "35.0.0", default-features = false }

sc-basic-authorship = { version = "0.47.0", default-features = false }
sc-cli = { version = "0.49.0", default-features = false }
sc-client-api = { version = "38.0.0", default-features = false }
sc-consensus = { version = "0.46.0", default-features = false }
sc-consensus-babe = { version = "0.47.0", default-features = false }
sc-consensus-grandpa = { version = "0.32.0", default-features = false }
sc-executor = { version = "0.41.0", default-features = false }
sc-network = { version = "0.47.0", default-features = false }
sc-offchain = { version = "42.0.0", default-features = false }
sc-service = { version = "0.48.0", default-features = false }
sc-telemetry = { version = "27.0.0", default-features = false }
sc-transaction-pool = { version = "38.0.0", default-features = false }
sc-transaction-pool-api = { version = "38.0.0", default-features = false }
sc-storage-monitor = { version = "0.23.0", default-features = false }
sc-consensus-slots = { version = "0.46.0", default-features = false }
sc-consensus-babe-rpc = { version = "0.47.0", default-features = false }
sc-consensus-grandpa-rpc = { version = "0.32.0", default-features = false }
sc-rpc-spec-v2 = { version = "0.47.0", default-features = false }
sc-authority-discovery = { version = "0.47.0", default-features = false }

frame-support = { version = "39.0.0", default-features = false }
frame-system = { version = "39.0.0", default-features = false }
frame-benchmarking = { version = "39.0.0", default-features = false }
frame-system-benchmarking = { version = "39.0.0", default-features = false }
frame-system-rpc-runtime-api = { version = "35.0.0", default-features = false }
frame-metadata-hash-extension = { version = "0.7.0", default-features = false }
frame-executive = { version = "39.0.0", default-features = false }
frame-try-runtime = { version = "0.45.0", default-features = false }
frame-benchmarking-cli = { version = "45.0.0", default-features = false }
substrate-frame-rpc-system = { version = "41.0.0", default-features = false }
substrate-build-script-utils = { version = "11.0.0" }

pallet-timestamp = { version = "38.0.0", default-features = false }
pallet-utility = { version = "39.0.0", default-features = false }
pallet-babe = { version = "39.0.0", default-features = false }
pallet-grandpa = { version = "39.0.0", default-features = false }
pallet-mmr = { version = "39.0.0", default-features = false }
pallet-authorship = { version = "39.0.0", default-features = false }
pallet-sudo = { version = "39.0.0", default-features = false }
pallet-session = { version = "39.0.0", default-features = false }
pallet-scheduler = { version = "40.0.0", default-features = false }
pallet-preimage = { version = "39.0.0", default-features = false }
pallet-proxy = { version = "39.0.0", default-features = false }
pallet-multisig = { version = "39.0.0", default-features = false }
pallet-balances = { version = "40.0.0", default-features = false }
pallet-im-online = { version = "38.0.0", default-features = false }
pallet-transaction-payment = { version = "39.0.0", default-features = false }
pallet-transaction-payment-rpc = { version = "42.0.0", default-features = false }
pallet-transaction-payment-rpc-runtime-api = { version = "39.0.0", default-features = false }
pallet-identity = { version = "39.0.0", default-features = false }
pallet-authority-discovery = { version = "39.0.0", default-features = false }
pallet-safe-mode = { version = "20.0.0", default-features = false }

substrate-wasm-builder = { version = "25.0.0", default-features = false }

# Substrate (wasm)
parity-scale-codec = { version = "3.6.12", default-features = false, features = [
	"derive",
] }
scale-info = { version = "2.11.6", default-features = false, features = [
	"derive",
] }
log = { version = "0.4.22", default-features = false }
smallvec = { version = "1.9.0", default-features = false }
array-bytes = { version = "9.1.2", default-features = true }


# Other (wasm)
enumflags2 = { version = "0.7.10", default-features = false }

# Allfeat (client)
shared-runtime = { version = "1.0.0-dev", path = "./runtime/shared", default-features = false }
melodie-runtime = { version = "1.0.0-dev", path = "./runtime/melodie" }

# Other (client)
clap = { version = "4.5.13", features = ["derive"] }
jsonrpsee = { version = "0.24.3", features = ["server", "macros"] }
serde_json = { version = "1.0.132", default-features = false }
futures = "0.3.31"
rand = { version = "0.8.5", default-features = false }

# make sure dev builds with backtrace do
# not slow us down
[profile.dev.package.backtrace]
inherits = "release"

[profile.ci]
debug = false
incremental = false
inherits = "dev"
opt-level = "z"

[profile.production]
codegen-units = 1
inherits = "release"
lto = true

[profile.release]
# Allfeat runtime requires unwinding.
opt-level = 3
panic = "unwind"
