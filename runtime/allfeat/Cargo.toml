[package]
name = "allfeat-runtime"
version = "1.0.0-dev"
description = "The Allfeat Mainnet runtime."
authors = { workspace = true }
homepage = "https://allfeat.org/"
edition = "2021"
license = "Unlicense"
publish = false

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
parity-scale-codec = { workspace = true, features = ["derive", "max-encoded-len"] }
scale-info = { workspace = true, features = ["derive"] }
static_assertions = { workspace = true }
log = { workspace = true }
num_enum = { workspace = true }
hex-literal = { workspace = true }
enumflags2 = { workspace = true }
smallvec = { workspace = true }

frame-support = { workspace = true }
frame-election-provider-support = { workspace = true }
frame-system = { workspace = true }
frame-try-runtime = { workspace = true, optional = true }
frame-executive = { workspace = true }

shared-runtime = { workspace = true }

sp-arithmetic = { workspace = true }
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }
sp-authority-discovery = { workspace = true }
sp-consensus-babe = { workspace = true }
sp-consensus-grandpa = { workspace = true }
allfeat-primitives = { workspace = true }
sp-staking = { workspace = true }
sp-io = { workspace = true }
sp-statement-store = { workspace = true }
sp-storage = { workspace = true }
sp-genesis-builder = { workspace = true }

# Allfeat pallets
pallet-artists = { workspace = true }

pallet-babe = { workspace = true }
pallet-authority-discovery = { workspace = true }
pallet-authorship = { workspace = true }
pallet-bags-list = { workspace = true }
pallet-conviction-voting = { workspace = true }
pallet-election-provider-multi-phase = { workspace = true }
pallet-election-provider-support-benchmarking = { workspace = true, optional = true }
pallet-im-online = { workspace = true }
pallet-identity = { workspace = true }
pallet-mmr = { workspace = true }
pallet-multisig = { workspace = true }
pallet-nomination-pools = { workspace = true }
pallet-nomination-pools-benchmarking = { workspace = true, optional = true }
pallet-offences = { workspace = true }
pallet-offences-benchmarking = { workspace = true, optional = true }
pallet-preimage = { workspace = true }
pallet-proxy = { workspace = true }
pallet-referenda = { workspace = true }
pallet-session = { workspace = true }
pallet-session-benchmarking = { workspace = true, optional = true }
pallet-staking = { workspace = true }
pallet-staking-reward-curve = { workspace = true }
pallet-scheduler = { workspace = true }
pallet-balances = { workspace = true, features = ["insecure_zero_ed"] }
pallet-grandpa = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-utility = { workspace = true }
pallet-vesting = { workspace = true }
pallet-whitelist = { workspace = true }

# Frontier
fp-evm = { workspace = true, features = ["serde"] }
fp-rpc = { workspace = true }
fp-self-contained = { workspace = true, features = ["serde"] }
# Frontier FRAME
pallet-ethereum = { workspace = true }
pallet-evm = { workspace = true }
pallet-evm-precompile-modexp = { workspace = true }
pallet-evm-precompile-sha3fips = { workspace = true }
pallet-evm-precompile-simple = { workspace = true }
pallet-evm-precompile-bn128 = { workspace = true }
pallet-evm-precompile-blake2 = { workspace = true }
pallet-evm-precompile-artists = { workspace = true }
precompile-utils = { workspace = true }

# Allfeat precompiles
pallet-evm-precompile-balances-erc20 = { workspace = true }

# Used for the node template's RPCs
frame-system-rpc-runtime-api = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }

# Used for runtime benchmarking
frame-benchmarking = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }

# Local Dependencies
[dev-dependencies]
sha3 = { workspace = true, features = ["std"] }
sp-keyring = { workspace = true }
separator = "0.4.1"

precompile-utils = { workspace = true, features = ["std", "testing"] }

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[features]
default = ["std"]
with-tracing = ["frame-executive/with-tracing"]
std = [
    "sp-arithmetic/std",
    "sp-authority-discovery/std",
    "pallet-artists/std",
    "pallet-authority-discovery/std",
    "pallet-authorship/std",
    "sp-consensus-babe/std",
    "sp-consensus-grandpa/std",
    "pallet-babe/std",
    "pallet-bags-list/std",
    "pallet-balances/std",
    "sp-block-builder/std",
    "parity-scale-codec/std",
    "scale-info/std",
    "frame-executive/std",
    "pallet-grandpa/std",
    "pallet-im-online/std",
    "sp-inherents/std",
    "pallet-mmr/std",
    "pallet-multisig/std",
    "pallet-nomination-pools/std",
    "pallet-identity/std",
    "pallet-scheduler/std",
    "allfeat-primitives/std",
    "sp-offchain/std",
    "pallet-offences/std",
    "pallet-offences-benchmarking?/std",
    "pallet-preimage/std",
    "pallet-proxy/std",
    "sp-core/std",
    "sp-std/std",
    "pallet-session/std",
    "pallet-session-benchmarking?/std",
    "sp-api/std",
    "sp-runtime/std",
    "sp-staking/std",
    "pallet-staking/std",
    "sp-session/std",
    "pallet-sudo/std",
    "frame-support/std",
    "frame-benchmarking?/std",
    "frame-system-benchmarking?/std",
    "frame-system-rpc-runtime-api/std",
    "frame-system/std",
    "pallet-election-provider-multi-phase/std",
    "pallet-timestamp/std",
    "pallet-transaction-payment-rpc-runtime-api/std",
    "pallet-transaction-payment/std",
    "pallet-referenda/std",
    "pallet-whitelist/std",
    "sp-transaction-pool/std",
    "pallet-utility/std",
    "sp-version/std",
    "pallet-conviction-voting/std",
    "log/std",
    "frame-try-runtime?/std",
    "sp-io/std",
    "sp-statement-store/std",
    "shared-runtime/std",
    "pallet-vesting/std",
    # Frontier
    "fp-evm/std",
    "fp-rpc/std",
    "fp-self-contained/std",
    # Frontier FRAME
    "pallet-ethereum/std",
    "pallet-evm/std",
    "pallet-evm-precompile-modexp/std",
    "pallet-evm-precompile-sha3fips/std",
    "pallet-evm-precompile-simple/std",
    "pallet-evm-precompile-bn128/std",
    "pallet-evm-precompile-blake2/std",
    "precompile-utils/std",
    "pallet-evm-precompile-balances-erc20/std",
    "pallet-evm-precompile-artists/std",
]
runtime-benchmarks = [
    "frame-benchmarking/runtime-benchmarks",
    "frame-support/runtime-benchmarks",
    "frame-system/runtime-benchmarks",
    "sp-runtime/runtime-benchmarks",
    "pallet-babe/runtime-benchmarks",
    "pallet-bags-list/runtime-benchmarks",
    "pallet-balances/runtime-benchmarks",
    "pallet-election-provider-multi-phase/runtime-benchmarks",
    "pallet-election-provider-support-benchmarking/runtime-benchmarks",
    "pallet-grandpa/runtime-benchmarks",
    "pallet-identity/runtime-benchmarks",
    "pallet-im-online/runtime-benchmarks",
    "pallet-mmr/runtime-benchmarks",
    "pallet-multisig/runtime-benchmarks",
    "pallet-nomination-pools-benchmarking/runtime-benchmarks",
    "pallet-offences-benchmarking/runtime-benchmarks",
    "pallet-preimage/runtime-benchmarks",
    "pallet-proxy/runtime-benchmarks",
    "pallet-scheduler/runtime-benchmarks",
    "pallet-session-benchmarking/runtime-benchmarks",
    "pallet-staking/runtime-benchmarks",
    "pallet-timestamp/runtime-benchmarks",
    "pallet-utility/runtime-benchmarks",
    "pallet-sudo/runtime-benchmarks",
    "pallet-artists/runtime-benchmarks",
    "frame-system-benchmarking/runtime-benchmarks",
    "pallet-ethereum/runtime-benchmarks",
    "pallet-evm/runtime-benchmarks",
    "pallet-referenda/runtime-benchmarks",
    "pallet-conviction-voting/runtime-benchmarks",
    "pallet-whitelist/runtime-benchmarks",
    "pallet-vesting/runtime-benchmarks"
]
try-runtime = [
    "frame-election-provider-support/try-runtime",
    "frame-executive/try-runtime",
    "frame-try-runtime/try-runtime",
    "frame-system/try-runtime",
    "frame-support/try-runtime",
    "pallet-authority-discovery/try-runtime",
    "pallet-authorship/try-runtime",
    "pallet-babe/try-runtime",
    "pallet-balances/try-runtime",
    "pallet-bags-list/try-runtime",
    "pallet-election-provider-multi-phase/try-runtime",
    "pallet-grandpa/try-runtime",
    "pallet-im-online/try-runtime",
    "pallet-mmr/try-runtime",
    "pallet-multisig/try-runtime",
    "pallet-offences/try-runtime",
    "pallet-preimage/try-runtime",
    "pallet-proxy/try-runtime",
    "pallet-scheduler/try-runtime",
    "pallet-session/try-runtime",
    "pallet-staking/try-runtime",
    "pallet-sudo/try-runtime",
    "pallet-timestamp/try-runtime",
    "pallet-transaction-payment/try-runtime",
    "pallet-utility/try-runtime",
    "pallet-artists/try-runtime",
    "pallet-identity/try-runtime",
    "pallet-nomination-pools/try-runtime",
    "pallet-evm/try-runtime",
    "pallet-ethereum/try-runtime",
    "pallet-conviction-voting/try-runtime",
    "pallet-whitelist/try-runtime",
    "pallet-referenda/try-runtime",
    "pallet-vesting/try-runtime",
    "sp-runtime/try-runtime",
    "fp-self-contained/try-runtime",
]

# A feature that should be enabled when the runtime should be built for on-chain
# deployment. This will disable stuff that shouldn't be part of the on-chain wasm
# to make it smaller, like logging for example.
on-chain-release-build = ["sp-api/disable-logging"]

# Set timing constants (e.g. session period) to faster versions to speed up testing.
fast-runtime = []