
//! Autogenerated weights for `pallet_nfts`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-11, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `symphonie-01`, CPU: `Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/allfeat
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_nfts
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./runtime/symphonie/src/weights/nfts.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_nfts`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_nfts::WeightInfo for WeightInfo<T> {
	// Storage: Nfts NextCollectionId (r:1 w:1)
	// Storage: Nfts Collection (r:1 w:1)
	// Storage: Nfts CollectionRoleOf (r:0 w:1)
	// Storage: Nfts CollectionConfigOf (r:0 w:1)
	// Storage: Nfts CollectionAccount (r:0 w:1)
	fn create() -> Weight {
		// Minimum execution time: 163_928 nanoseconds.
		Weight::from_ref_time(165_559_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	// Storage: Nfts NextCollectionId (r:1 w:1)
	// Storage: Nfts Collection (r:1 w:1)
	// Storage: Nfts CollectionRoleOf (r:0 w:1)
	// Storage: Nfts CollectionConfigOf (r:0 w:1)
	// Storage: Nfts CollectionAccount (r:0 w:1)
	fn force_create() -> Weight {
		// Minimum execution time: 113_616 nanoseconds.
		Weight::from_ref_time(114_694_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	// Storage: Nfts Collection (r:1 w:1)
	// Storage: Nfts Item (r:1001 w:1000)
	// Storage: Nfts Attribute (r:1001 w:1000)
	// Storage: Nfts ItemMetadataOf (r:0 w:1000)
	// Storage: Nfts CollectionRoleOf (r:0 w:1)
	// Storage: Nfts CollectionMetadataOf (r:0 w:1)
	// Storage: Nfts CollectionConfigOf (r:0 w:1)
	// Storage: Nfts ItemConfigOf (r:0 w:1000)
	// Storage: Nfts Account (r:0 w:1000)
	// Storage: Nfts CollectionAccount (r:0 w:1)
	/// The range of component `n` is `[0, 1000]`.
	/// The range of component `m` is `[0, 1000]`.
	/// The range of component `a` is `[0, 1000]`.
	fn destroy(_n: u32, m: u32, a: u32, ) -> Weight {
		// Minimum execution time: 93_329_397 nanoseconds.
		Weight::from_ref_time(87_213_046_579)
			// Standard Error: 65_983
			.saturating_add(Weight::from_ref_time(6_674_097).saturating_mul(m.into()))
			// Standard Error: 65_983
			.saturating_add(Weight::from_ref_time(33_608_423).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(1003))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(a.into())))
			.saturating_add(T::DbWeight::get().writes(3005))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(m.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(a.into())))
	}
	// Storage: Nfts CollectionConfigOf (r:1 w:0)
	// Storage: Nfts Item (r:1 w:1)
	// Storage: Nfts Collection (r:1 w:1)
	// Storage: Nfts CollectionRoleOf (r:1 w:0)
	// Storage: Nfts ItemConfigOf (r:1 w:1)
	// Storage: Nfts Account (r:0 w:1)
	fn mint() -> Weight {
		// Minimum execution time: 200_820 nanoseconds.
		Weight::from_ref_time(211_842_000)
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: Nfts CollectionRoleOf (r:1 w:0)
	// Storage: Nfts Item (r:1 w:1)
	// Storage: Nfts Collection (r:1 w:1)
	// Storage: Nfts CollectionConfigOf (r:1 w:0)
	// Storage: Nfts ItemConfigOf (r:1 w:1)
	// Storage: Nfts Account (r:0 w:1)
	fn force_mint() -> Weight {
		// Minimum execution time: 204_980 nanoseconds.
		Weight::from_ref_time(206_348_000)
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: Nfts Collection (r:1 w:1)
	// Storage: Nfts Item (r:1 w:1)
	// Storage: Nfts CollectionRoleOf (r:1 w:0)
	// Storage: Nfts ItemConfigOf (r:1 w:1)
	// Storage: Nfts Account (r:0 w:1)
	// Storage: Nfts ItemPriceOf (r:0 w:1)
	// Storage: Nfts ItemAttributesApprovalsOf (r:0 w:1)
	// Storage: Nfts PendingSwapOf (r:0 w:1)
	fn burn() -> Weight {
		// Minimum execution time: 214_748 nanoseconds.
		Weight::from_ref_time(216_983_000)
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	// Storage: Nfts Collection (r:1 w:0)
	// Storage: Nfts CollectionConfigOf (r:1 w:0)
	// Storage: Nfts ItemConfigOf (r:1 w:0)
	// Storage: Nfts Item (r:1 w:1)
	// Storage: Nfts CollectionRoleOf (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: Nfts Account (r:0 w:2)
	// Storage: Nfts ItemPriceOf (r:0 w:1)
	// Storage: Nfts PendingSwapOf (r:0 w:1)
	fn transfer() -> Weight {
		// Minimum execution time: 242_469 nanoseconds.
		Weight::from_ref_time(245_427_000)
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	// Storage: Nfts Collection (r:1 w:0)
	// Storage: Nfts CollectionConfigOf (r:1 w:0)
	// Storage: Nfts Item (r:102 w:102)
	/// The range of component `i` is `[0, 5000]`.
	fn redeposit(i: u32, ) -> Weight {
		// Minimum execution time: 77_479 nanoseconds.
		Weight::from_ref_time(77_863_000)
			// Standard Error: 18_775
			.saturating_add(Weight::from_ref_time(63_797_845).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(i.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(i.into())))
	}
	// Storage: Nfts CollectionRoleOf (r:1 w:0)
	// Storage: Nfts ItemConfigOf (r:1 w:1)
	fn lock_item_transfer() -> Weight {
		// Minimum execution time: 93_126 nanoseconds.
		Weight::from_ref_time(93_844_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Nfts CollectionRoleOf (r:1 w:0)
	// Storage: Nfts ItemConfigOf (r:1 w:1)
	fn unlock_item_transfer() -> Weight {
		// Minimum execution time: 93_337 nanoseconds.
		Weight::from_ref_time(94_808_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Nfts CollectionRoleOf (r:1 w:0)
	// Storage: Nfts CollectionConfigOf (r:1 w:1)
	fn lock_collection() -> Weight {
		// Minimum execution time: 83_992 nanoseconds.
		Weight::from_ref_time(85_349_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Nfts OwnershipAcceptance (r:1 w:1)
	// Storage: Nfts Collection (r:1 w:1)
	// Storage: Nfts CollectionAccount (r:0 w:2)
	fn transfer_ownership() -> Weight {
		// Minimum execution time: 106_138 nanoseconds.
		Weight::from_ref_time(107_671_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: Nfts Collection (r:1 w:1)
	// Storage: Nfts CollectionRoleOf (r:0 w:4)
	fn set_team() -> Weight {
		// Minimum execution time: 116_231 nanoseconds.
		Weight::from_ref_time(117_896_000)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	// Storage: Nfts Collection (r:1 w:1)
	// Storage: Nfts CollectionAccount (r:0 w:2)
	fn force_collection_owner() -> Weight {
		// Minimum execution time: 86_571 nanoseconds.
		Weight::from_ref_time(88_049_000)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Nfts Collection (r:1 w:0)
	// Storage: Nfts CollectionConfigOf (r:0 w:1)
	fn force_collection_config() -> Weight {
		// Minimum execution time: 72_187 nanoseconds.
		Weight::from_ref_time(73_506_000)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Nfts Collection (r:1 w:0)
	// Storage: Nfts ItemConfigOf (r:1 w:1)
	fn lock_item_properties() -> Weight {
		// Minimum execution time: 84_949 nanoseconds.
		Weight::from_ref_time(86_515_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Nfts Collection (r:1 w:1)
	// Storage: Nfts CollectionConfigOf (r:1 w:0)
	// Storage: Nfts ItemConfigOf (r:1 w:0)
	// Storage: Nfts Attribute (r:1 w:1)
	fn set_attribute() -> Weight {
		// Minimum execution time: 203_003 nanoseconds.
		Weight::from_ref_time(205_020_000)
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Nfts Collection (r:1 w:1)
	// Storage: Nfts Attribute (r:1 w:1)
	fn force_set_attribute() -> Weight {
		// Minimum execution time: 129_319 nanoseconds.
		Weight::from_ref_time(130_327_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Nfts Attribute (r:1 w:1)
	// Storage: Nfts Collection (r:1 w:1)
	// Storage: Nfts ItemConfigOf (r:1 w:0)
	fn clear_attribute() -> Weight {
		// Minimum execution time: 178_036 nanoseconds.
		Weight::from_ref_time(180_126_000)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Nfts Item (r:1 w:0)
	// Storage: Nfts ItemAttributesApprovalsOf (r:1 w:1)
	fn approve_item_attributes() -> Weight {
		// Minimum execution time: 84_938 nanoseconds.
		Weight::from_ref_time(86_379_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Nfts Item (r:1 w:0)
	// Storage: Nfts ItemAttributesApprovalsOf (r:1 w:1)
	// Storage: Nfts Attribute (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	/// The range of component `n` is `[0, 1000]`.
	fn cancel_item_attributes_approval(n: u32, ) -> Weight {
		// Minimum execution time: 118_860 nanoseconds.
		Weight::from_ref_time(119_636_000)
			// Standard Error: 23_333
			.saturating_add(Weight::from_ref_time(28_026_730).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(2))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
	}
	// Storage: Nfts Collection (r:1 w:1)
	// Storage: Nfts ItemConfigOf (r:1 w:0)
	// Storage: Nfts CollectionConfigOf (r:1 w:0)
	// Storage: Nfts ItemMetadataOf (r:1 w:1)
	fn set_metadata() -> Weight {
		// Minimum execution time: 165_900 nanoseconds.
		Weight::from_ref_time(167_887_000)
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Nfts Collection (r:1 w:1)
	// Storage: Nfts ItemConfigOf (r:1 w:0)
	// Storage: Nfts ItemMetadataOf (r:1 w:1)
	fn clear_metadata() -> Weight {
		// Minimum execution time: 156_795 nanoseconds.
		Weight::from_ref_time(159_139_000)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Nfts CollectionConfigOf (r:1 w:0)
	// Storage: Nfts Collection (r:1 w:1)
	// Storage: Nfts CollectionMetadataOf (r:1 w:1)
	fn set_collection_metadata() -> Weight {
		// Minimum execution time: 147_437 nanoseconds.
		Weight::from_ref_time(152_567_000)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Nfts Collection (r:1 w:0)
	// Storage: Nfts CollectionConfigOf (r:1 w:0)
	// Storage: Nfts CollectionMetadataOf (r:1 w:1)
	fn clear_collection_metadata() -> Weight {
		// Minimum execution time: 142_459 nanoseconds.
		Weight::from_ref_time(143_773_000)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Nfts Item (r:1 w:1)
	// Storage: Nfts CollectionConfigOf (r:1 w:0)
	// Storage: Nfts CollectionRoleOf (r:1 w:0)
	fn approve_transfer() -> Weight {
		// Minimum execution time: 111_301 nanoseconds.
		Weight::from_ref_time(113_395_000)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Nfts Item (r:1 w:1)
	// Storage: Nfts CollectionRoleOf (r:1 w:0)
	fn cancel_approval() -> Weight {
		// Minimum execution time: 103_303 nanoseconds.
		Weight::from_ref_time(106_044_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Nfts Item (r:1 w:1)
	// Storage: Nfts CollectionRoleOf (r:1 w:0)
	fn clear_all_transfer_approvals() -> Weight {
		// Minimum execution time: 98_730 nanoseconds.
		Weight::from_ref_time(99_995_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Nfts OwnershipAcceptance (r:1 w:1)
	fn set_accept_ownership() -> Weight {
		// Minimum execution time: 87_859 nanoseconds.
		Weight::from_ref_time(89_558_000)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Nfts CollectionConfigOf (r:1 w:1)
	// Storage: Nfts Collection (r:1 w:0)
	fn set_collection_max_supply() -> Weight {
		// Minimum execution time: 87_883 nanoseconds.
		Weight::from_ref_time(89_765_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Nfts Collection (r:1 w:0)
	// Storage: Nfts CollectionConfigOf (r:1 w:1)
	fn update_mint_settings() -> Weight {
		// Minimum execution time: 82_417 nanoseconds.
		Weight::from_ref_time(83_951_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Nfts Item (r:1 w:0)
	// Storage: Nfts CollectionConfigOf (r:1 w:0)
	// Storage: Nfts ItemConfigOf (r:1 w:0)
	// Storage: Nfts ItemPriceOf (r:0 w:1)
	fn set_price() -> Weight {
		// Minimum execution time: 105_960 nanoseconds.
		Weight::from_ref_time(106_960_000)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Nfts Item (r:1 w:1)
	// Storage: Nfts ItemPriceOf (r:1 w:1)
	// Storage: Nfts Collection (r:1 w:0)
	// Storage: Nfts CollectionConfigOf (r:1 w:0)
	// Storage: Nfts ItemConfigOf (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: Nfts Account (r:0 w:2)
	// Storage: Nfts PendingSwapOf (r:0 w:1)
	fn buy_item() -> Weight {
		// Minimum execution time: 269_131 nanoseconds.
		Weight::from_ref_time(271_721_000)
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// The range of component `n` is `[0, 10]`.
	fn pay_tips(n: u32, ) -> Weight {
		// Minimum execution time: 14_745 nanoseconds.
		Weight::from_ref_time(27_800_310)
			// Standard Error: 77_234
			.saturating_add(Weight::from_ref_time(19_622_731).saturating_mul(n.into()))
	}
	// Storage: Nfts Item (r:2 w:0)
	// Storage: Nfts PendingSwapOf (r:0 w:1)
	fn create_swap() -> Weight {
		// Minimum execution time: 98_707 nanoseconds.
		Weight::from_ref_time(100_169_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Nfts PendingSwapOf (r:1 w:1)
	// Storage: Nfts Item (r:1 w:0)
	fn cancel_swap() -> Weight {
		// Minimum execution time: 105_727 nanoseconds.
		Weight::from_ref_time(107_004_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Nfts Item (r:2 w:2)
	// Storage: Nfts PendingSwapOf (r:1 w:2)
	// Storage: Nfts Collection (r:1 w:0)
	// Storage: Nfts CollectionConfigOf (r:1 w:0)
	// Storage: Nfts ItemConfigOf (r:2 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: Nfts Account (r:0 w:4)
	// Storage: Nfts ItemPriceOf (r:0 w:2)
	fn claim_swap() -> Weight {
		// Minimum execution time: 396_231 nanoseconds.
		Weight::from_ref_time(403_158_000)
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(11))
	}
}
